let allProducts = [];
let cart = JSON.parse(localStorage.getItem('cart')) || [];

async function fetchProducts() {
    try {
        const response = await fetch('https://dummyjson.com/products?limit=100');
        const data = await response.json();
        allProducts = data.products;
        displayProducts(allProducts);
        generateFilterButtons(allProducts);
        updateCartBadge();
    } catch (error) {
        console.log(error);
    }
}

function displayProducts(products) {
    const productList = document.getElementById("productList");
    productList.innerHTML = '';
    products.forEach((product) => {
        const card = document.createElement('div');
        card.className = 'card col-lg-3 m-4 shadow-lg p-2';
        card.innerHTML = `
            <img src="${product.thumbnail}" class="card-img-top">
            <div class="card-body">
                <h4 class="card-title">${product.title}</h4>
                <p>${product.description}</p>
                <h3>$ ${product.price}</h3>
            </div>
            <div class="card-footer">
                <button class="btn btn-primary add-to-cart" data-id="${product.id}">Add To Cart</button>
                <button class="btn btn-success">View Details</button>
            </div>
        `;
        productList.appendChild(card);
    });
    document.querySelectorAll('.add-to-cart').forEach(button => {
        button.addEventListener('click', function () {
            const productId = parseInt(this.getAttribute('data-id'));
            addToCart(productId);
        });
    });
}

function addToCart(productId) {
    const product = allProducts.find(p => p.id === productId);
    const cartItem = cart.find(item => item.id === productId);
    if (cartItem) {
        cartItem.quantity++;
    } else {
        cart.push({ ...product, quantity: 1 });
    }
    localStorage.setItem('cart', JSON.stringify(cart));
    updateCartBadge();
}

function updateCartBadge() {
    const cartBadge = document.getElementById("cartBadge");
    cartBadge.textContent = cart.reduce((total, item) => total + item.quantity, 0);
}

function generateFilterButtons(allProducts) {
    const filterButtonsContainer = document.getElementById("filter-buttons-container");
    filterButtonsContainer.innerHTML = '';
    const categories = allProducts.reduce((acc, product) => {
        if (!acc.includes(product.category)) {
            acc.push(product.category);
        }
        return acc;
    }, []);
    function createButton(category) {
        const button = document.createElement('button');
        button.className = 'btn btn-outline-primary';
        button.textContent = category.charAt(0).toUpperCase() + category.slice(1);
        button.setAttribute('data-category', category);
        button.addEventListener('click', () => {
            displayProducts(category === 'all' ? allProducts : allProducts.filter(product => product.category == category));
        });
        filterButtonsContainer.appendChild(button);
    }
    createButton('all');
    categories.forEach(createButton);
}

document.getElementById("cartButton").addEventListener('click', () => {
    window.location.href = "Cart.html";
});

document.getElementById("inputSearch").addEventListener('input', function () {
    const query = this.value.toLowerCase();
    const filteredProducts = allProducts.filter(product => product.title.toLowerCase().includes(query) || product.description.toLowerCase().includes(query));
    displayProducts(filteredProducts);
});

fetchProducts();
